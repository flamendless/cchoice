// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: checkout.sql

package queries

import (
	"context"
	"time"
)

const createCheckout = `-- name: CreateCheckout :one
INSERT INTO tbl_checkouts(
	id,
	gateway,
	status,
	description,
	total_amount,
	checkout_url,
	client_key,
	reference_number,
	payment_status,
	payment_method_type,
	paid_at,
	metadata_remarks,
	metadata_notes,
	metadata_customer_number
) VALUES (
	?, ?, ?, ?, ?,
	?, ?, ?, ?, ?,
	?, ?, ?, ?
) RETURNING id, gateway, status, description, total_amount, checkout_url, client_key, reference_number, payment_status, payment_method_type, paid_at, metadata_remarks, metadata_notes, metadata_customer_number, created_at, updated_at
`

type CreateCheckoutParams struct {
	ID                     string
	Gateway                string
	Status                 string
	Description            string
	TotalAmount            int64
	CheckoutUrl            string
	ClientKey              string
	ReferenceNumber        string
	PaymentStatus          string
	PaymentMethodType      string
	PaidAt                 time.Time
	MetadataRemarks        string
	MetadataNotes          string
	MetadataCustomerNumber string
}

func (q *Queries) CreateCheckout(ctx context.Context, arg CreateCheckoutParams) (TblCheckout, error) {
	row := q.db.QueryRowContext(ctx, createCheckout,
		arg.ID,
		arg.Gateway,
		arg.Status,
		arg.Description,
		arg.TotalAmount,
		arg.CheckoutUrl,
		arg.ClientKey,
		arg.ReferenceNumber,
		arg.PaymentStatus,
		arg.PaymentMethodType,
		arg.PaidAt,
		arg.MetadataRemarks,
		arg.MetadataNotes,
		arg.MetadataCustomerNumber,
	)
	var i TblCheckout
	err := row.Scan(
		&i.ID,
		&i.Gateway,
		&i.Status,
		&i.Description,
		&i.TotalAmount,
		&i.CheckoutUrl,
		&i.ClientKey,
		&i.ReferenceNumber,
		&i.PaymentStatus,
		&i.PaymentMethodType,
		&i.PaidAt,
		&i.MetadataRemarks,
		&i.MetadataNotes,
		&i.MetadataCustomerNumber,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const createCheckoutLineItem = `-- name: CreateCheckoutLineItem :execrows
INSERT INTO tbl_checkout_line_items(
	checkout_id,
	amount,
	currency,
	description,
	name,
	quantity
) VALUES (
	?, ?, ?,
	?, ?, ?
) RETURNING id, checkout_id, amount, currency, description, name, quantity, created_at, updated_at
`

type CreateCheckoutLineItemParams struct {
	CheckoutID  string
	Amount      int64
	Currency    string
	Description string
	Name        string
	Quantity    int64
}

func (q *Queries) CreateCheckoutLineItem(ctx context.Context, arg CreateCheckoutLineItemParams) (int64, error) {
	result, err := q.db.ExecContext(ctx, createCheckoutLineItem,
		arg.CheckoutID,
		arg.Amount,
		arg.Currency,
		arg.Description,
		arg.Name,
		arg.Quantity,
	)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}
