package components

import (
	"cchoice/cmd/web/models"
	"cchoice/internal/conf"
	"cchoice/internal/constants"
	"fmt"
	"strings"
)

templ CartPage(body templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			@HeadMeta()
			@TabTitle("Cart")
		</head>
		@body
	</html>
}

templ AddToCart() {
	<button
		id="btn-add-to-cart"
		class="
			flex justify-center items-center relative inline-block w-12 h-12
			bg-cchoice font-medium rounded-lg text-sm p-1 cursor-pointer m-2 transition-colors
			group rounded-full hover:bg-cchoicesoft
		"
		title="add to cart"
		alt="add to cart button"
		hx-post="/cchoice/carts/lines"
		hx-include="#selected-product-id"
		hx-swap="none"
		_="
			on click log 'Added to cart: ' + #selected-product-id.value end
			on htmx:afterRequest
				trigger get on #cart-count
			end
		"
	>
		@svgCart("stroke-white group-hover:stroke-cchoice_border w-full h-full p-2")
		<span
			class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full px-1.5 shadow"
		>
			+1
		</span>
	</button>
	<input
		type="hidden"
		id="selected-product-id"
		name="product_id"
		value=""
	/>
}

templ CartPageBody() {
	<body class="h-screen m-0 p-0 overflow-x-hidden custom-scrollbar">
		@ErrorBanner()
		@Header()
		<div class="flex flex-col items-center content-center px-2 pb-32 gap-4">
			@CartSummaryBar()
			<form
				id="checkout-form"
				hx-post="/cchoice/carts/finalize"
				hx-swap="none"
			>
				<div class="flex w-screen gap-4 justify-center px-8">
					<div
						id="cart-lines"
						class="flex flex-col gap-[8px] mx-4 w-2/3"
						hx-get="/cchoice/carts/lines"
						hx-trigger="load"
						hx-swap="beforeend"
					>
						//CartCheckoutLineItem
					</div>
					<div
						class="flex flex-col gap-[8px] mx-4 w-1/3 sticky top-[128px]"
					>
						<div
							id="cart-summary"
							class="flex flex-col gap-1 border rounded h-auto p-2"
							hx-get="/cchoice/carts/summary?data=summary_total"
							hx-trigger="load once, get"
							hx-swap="innerHTML"
						>
							//CartSummaryRow
						</div>
						<div
							id="cart-shipping"
							class="flex flex-col gap-1 border rounded h-auto p-2"
						>
							@CartSubcard("shipping-address-select", "Shipping Information", ShippingAddressSelect())
						</div>
						<div
							id="cart-payments"
							class="flex flex-row flex-wrap justify-center gap-1 border rounded h-auto p-2"
							hx-get="/cchoice/carts/payment-methods"
							hx-trigger="load once, get"
							hx-swap="beforeend"
							hx-target="#payment-methods"
						>
							@CartSubcard("payment-methods", "Payment Method")
						</div>
						<div
							id="cart-proceed"
							class="flex flex-col gap-1 border rounded h-auto p-2"
						>
							<button
								id="btn-proceed"
								class="
									flex justify-center items-center relative inline-block px-4 py-2 m-2
									bg-cchoice font-medium rounded-lg cursor-pointer transition-colors
									text-white rounded-full hover:bg-cchoicesoft
									disabled:opacity-50 disabled:cursor-not-allowed
								"
								title="proceed to checkout"
								alt="proceed to checkout button"
								type="submit"
								disabled
							>
								Proceed to checkout
							</button>
						</div>
					</div>
				</div>
			</form>
		</div>
		@Footer()
		<script type="text/javascript" src={ string(templ.URL("/cchoice/static/js/cart.js")) }>
		</script>
	</body>
}

templ CartSummaryRow(left string, right string, class ...string) {
	<div class={ "flex flex-row flex-1 justify-between " + strings.Join(class, " ") }>
		<h1>{ left }</h1>
		<h1 class="text-right">{ right }</h1>
	</div>
}

templ CartPaymentItem(paymentMethod models.AvailablePaymentMethod) {
	<img
		class="w-12 h-12 object-contain mb-1"
		title={ "image of " + paymentMethod.Value.String() }
		src={ paymentMethod.ImageData }
		alt={ paymentMethod.Value.String() + " thumbnail" }
	/>
	<h1 class="text-center text-xs">{ paymentMethod.Value.GetDisplayText() }</h1>
}

templ CartPaymentMethod(paymentMethod models.AvailablePaymentMethod) {
	<div class="flex flex-row flex-wrap gap-4">
		<label>
			<input
				type="radio"
				class="hidden peer"
				aria-label="Select payment method"
				name="checked_payment_method"
				value={ paymentMethod.Value.String() }
				disabled?={ !paymentMethod.Enabled }
			/>
			if paymentMethod.Enabled {
				<div
					class="
						flex flex-col w-22 h-22 items-center justify-center p-2 border-2 border-gray-300
						rounded-lg cursor-pointer transition-colors hover:border-cchoice hover:bg-cchoice/10
						peer-checked:border-cchoice peer-checked:bg-cchoice/20
					"
				>
					@CartPaymentItem(paymentMethod)
				</div>
			} else {
				<div
					class="
						flex flex-col w-22 h-22 items-center justify-center p-4 rounded-lg
						border-2 border-gray-200 cursor-not-allowed opacity-50
						filter grayscale brightness-75
					"
				>
					@CartPaymentItem(paymentMethod)
				</div>
			}
		</label>
	</div>
}

templ CartPageBodyEmpty() {
	<body class="h-screen m-0 p-0 overflow-x-hidden custom-scrollbar">
		@ErrorBanner()
		@Header()
		<div class="flex flex-col items-center content-center pt-[128px]">
			if false && conf.Conf().IsLocal() {
				@CartSummaryBar()
			}
			@EmptyCart()
		</div>
		@Footer()
	</body>
}

templ EmptyCart() {
	<div class="h-[50vh] flex flex-col justify-center items-center">
		<h1 class="text-2xl text-cchoice-800">Your cart is empty</h1>
		@svgCart("size-32 my-4 stroke-cchoice")
	</div>
}

templ CartSummaryBar() {
	<div
		id="cart-summary-bar"
		class="w-[60%] flex justify-around my-2"
		hx-get="/cchoice/carts/summary?data=bar_items"
		hx-trigger="load"
		hx-target="#cart-summary-bar-n-items"
		hx-swap="textContent"
	>
		<p class="text-sm text-gray-600">Cart Summary</p>
		<p
			id="cart-summary-bar-n-items"
			class="text-sm text-gray-600"
		>
			0 Items
		</p>
	</div>
}

templ btnQtyDecrease(cl models.CheckoutLine) {
	<button
		type="button"
		id={ "btn-minus-" + cl.ID }
		alt="decrease quantity button"
		aria-label="Decrease quantity"
		title="Decrease quantity"
		class="p-1 border rounded disabled:opacity-40 group hover:bg-cchoice cursor-pointer disabled:cursor-not-allowed"
		disabled?={ cl.Quantity <= 1 }
		hx-patch={ "/cchoice/carts/lines/" + cl.ID + "?dec=1" }
		hx-target={ fmt.Sprintf("[name=qty-%s]", cl.ID) }
		hx-swap="textContent"
		_="
			on htmx:afterRequest
				put me.closest('.cart-line').querySelector('[name^=qty-]').textContent into txtQty
				put txtQty.split(':')[1].trim() into qty
				set qty to Number(qty)

				if qty <= 1
					set me.disabled to true
				else
					set me.disabled to false
				end

				put me.id.replace('btn-minus-', 'btn-plus-') into plusID
				put document.querySelector('#' + plusID) into btnPlus
				if btnPlus is not null
					trigger htmx:afterRequest on btnPlus
				end

				trigger get on #cart-summary
			end
		"
	>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			class="h-4 w-4 text-cchoice-600 group-hover:bg-cchoice"
			fill="none"
			viewBox="0 0 24 24"
			stroke="currentColor"
		>
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
		</svg>
	</button>
}

templ btnQtyIncrease(cl models.CheckoutLine) {
	<button
		type="button"
		id={ "btn-plus-" + cl.ID }
		alt="increase quantity button"
		aria-label="Increase quantity"
		title="Increase quantity"
		class="p-1 border rounded disabled:opacity-40 group hover:bg-cchoice cursor-pointer disabled:cursor-not-allowed"
		disabled?={ cl.Quantity >= constants.MaxCartLineQty }
		hx-patch={ "/cchoice/carts/lines/" + cl.ID + "?inc=1" }
		hx-target={ fmt.Sprintf("[name=qty-%s]", cl.ID) }
		hx-swap="textContent"
		_="
			on htmx:afterRequest
				put me.closest('.cart-line').querySelector('[name^=qty-]').textContent into txtQty
				put txtQty.split(':')[1].trim() into qty
				set qty to Number(qty)

				if qty >= 99
					set me.disabled to true
				else
					set me.disabled to false
				end

				put me.id.replace('btn-plus-', 'btn-minus-') into minusID
				put document.querySelector('#' + minusID) into btnMinus
				if btnMinus is not null
					trigger htmx:afterRequest on btnMinus
				end

				trigger get on #cart-summary
			end
		"
	>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			class="h-4 w-4 text-cchoice-600 group-hover:bg-cchoice"
			fill="none"
			viewBox="0 0 24 24"
			stroke="currentColor"
		>
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
		</svg>
	</button>
}

templ CartCheckoutLineItem(cl models.CheckoutLine) {
	<div
		id={ "cart-checkout-line-item-" + cl.ID }
		class="flex items-center gap-4 border rounded h-auto"
	>
		<div class="flex items-center gap-2 pl-3">
			<input
				type="checkbox"
				class="w-5 h-5 accent-cchoice_border hover:accent-cchoice"
				aria-label="Select item"
				name="checked_item"
				value={ cl.ID }
				checked
			/>
			<img
				class="m-2 w-32 max-w-32 h-32"
				title={ "product image of " + cl.Name }
				src={ cl.ThumbnailData }
				alt={ cl.Name + " thumbnail" }
				data-product-id={ cl.ProductID }
			/>
		</div>
		<div class="flex flex-row grow">
			<div class="flex-1">
				<h2 class="text-base font-semibold">{ cl.Name }</h2>
				<p class="text-xs text-gray-600">{ cl.BrandName }</p>
				<span class="flex gap-[4px]">
					if res, _ := cl.Price.Compare(&cl.DiscountedPrice); res != 0 {
						<p class="text-sm text-gray-600 line-through">
							{ cl.Price.Display() }
						</p>
						<p class="text-sm text-gray-700">
							{ cl.DiscountedPrice.Display() }
						</p>
					} else {
						<p class="text-sm text-gray-700">
							{ cl.DiscountedPrice.Display() }
						</p>
					}
				</span>

				<div class="cart-line flex items-center gap-2 my-1">
					@btnQtyDecrease(cl)
					<p
						name={ "qty-" + cl.ID }
						class="text-sm text-gray-500"
					>
						Qty: { cl.Quantity }
					</p>
					@btnQtyIncrease(cl)
				</div>

				<p class="text-sm text-gray-700">
					Total: { cl.Total.Display() }
				</p>
			</div>
			<div class="place-content-end mr-2">
				<button
					alt="Remove item from cart button"
					aria-label="Remove item in cart"
					title="Remove item from cart"
					hx-delete={ "/cchoice/carts/lines/" + cl.ID }
					hx-target={ "#cart-checkout-line-item-" + cl.ID }
					hx-swap="outerHTML"
					hx-push-url="false"
					class="
						group stroke-cchoice rounded-full p-2
						cursor-pointer hover:bg-cchoice_border
					"
				>
					@svgTrash("stroke-cchoice group-hover:stroke-white cursor-pointer")
				</button>
			</div>
		</div>
	</div>
}

templ CartSubcard(id string, label string, others ...templ.Component) {
	<h1 class="w-full">{ label }</h1>
	<div
		id={ id }
		class="flex flex-row flex-wrap justify-center gap-1 h-auto p-2"
	>
		for _, other := range others {
			@other
		}
		{ children... }
	</div>
}
