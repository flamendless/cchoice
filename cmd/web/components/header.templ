package components

import "cchoice/cmd/web/models"

var logoWithTextHandlerOnce = templ.NewOnceHandle()

templ LogoWithText(width string, height string) {
	@logoWithTextHandlerOnce.Once() {
		<a
			href="/cchoice"
			class="-mt-8 -mb-4 ml-4 w-fit"
		>
			<img
				src={ string(templ.URL("/cchoice/static/svg/logo_complete.svg")) }
				alt="cchoice logo and text"
				width={ width }
				height={ height }
			/>
		</a>
	}
}

templ SearchBar() {
	<form class="w-6/12">
		<label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
		<div class="relative">
			<div
				class="absolute inset-y-0 start-0 flex items-center ps-2 pointer-events-none"
				_="
					on htmx:beforeRequest from #search
						log 'search is triggered'
						add .hidden to #icon-search
						add .hidden to #search-results
						remove .hidden from #icon-spinner-search
					end

					on htmx:afterRequest from #search
						log 'search is done'
						wait 0.25s
						remove .hidden from #icon-search
						remove .hidden from #search-results
						add .hidden to #icon-spinner-search
					end
				"
			>
				<svg
					id="icon-search"
					class="w-5 text-cchoice"
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 20 20"
				>
					<path
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
					></path>
				</svg>
				<svg
					id="icon-spinner-search"
					class="w-7 text-cchoice hidden"
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 300 150"
				>
					<path fill="none" stroke="#F6742F" stroke-width="15" stroke-linecap="round" stroke-dasharray="300 385" stroke-dashoffset="0" d="M275 75c0 31-27 50-50 50-58 0-92-100-150-100-28 0-50 22-50 50s23 50 50 50c58 0 92-100 150-100 24 0 50 19 50 50Z">
						<animate attributeName="stroke-dashoffset" calcMode="spline" dur="2" values="685;-685" keySplines="0 0 1 1" repeatCount="indefinite"></animate>
					</path>
				</svg>
			</div>
			<input
				required
				autocomplete="off"
				type="search"
				id="search"
				name="search"
				placeholder="Search by product name..."
				class="block w-full p-3 ps-10 text-sm text-black border border-searchbar rounded-lg bg-searchbar focus:ring-cchoice focus:border-cchoice"
				hx-post="/cchoice/search"
				hx-trigger="input changed delay:1000ms, keyup[key=='Enter']"
				hx-validate="true"
				hx-include="#search"
				hx-target="#search-results > ul"
				hx-swap="innerHTML"
				_="
					on input
						if my value == ''
							add .hidden to #btn-clear
						else
							remove .hidden from #btn-clear
					end

					on focus
						if my value != '' and #search-results.children.length > 0
						then remove .hidden from #search-results
					end
				"
			/>
			<button
				id="btn-clear"
				type="button"
				class="
					hidden absolute end-[72px] bottom-2 text-base text-gray-400
					hover:text-cchoice text-sm px-2 py-1
				"
				aria-label="clear search"
				title="clear search"
				_="
					on click
						set #search.value to ''
						trigger input on #search
					end
				"
			>
				x
			</button>
			<button
				type="submit"
				class="
					text-white absolute end-2.5 bottom-2 bg-cchoice
					font-medium rounded-lg text-sm px-2 py-1
					hover:bg-cchoice_dark focus:ring-4 focus:outline-hidden focus:ring-cchoice transition-colors
				"
				alt="search button"
				aria-label="Search"
				title="Search"
			>
				Search
			</button>
			@SearchResults()
		</div>
	</form>
}

templ Cart() {
	<div class="m-2 flex flex-col place-conter-center">
		<button
			alt="cart logo"
			aria-label="Cart"
			title="Cart"
			class="
				group p-2 stroke-cchoice rounded-full
				cursor-pointer hover:bg-cchoice_border
			"
			hx-post="/cchoice/checkout"
		>
			@svgCart()
		</button>
	</div>
}

templ HeaderRow1Texts(texts []models.HeaderRowText) {
	<div id="header-row1-texts" class="w-full flex items-end place-content-end px-8 text-sm">
		for i, hrt := range texts {
			<a
				href={ templ.SafeURL(hrt.URL) }
				class="
					font-light mx-2 cursor-pointer
					hover:underline hover:bg-cchoicesoft transition-colors
				"
			>
				{ hrt.Label }
			</a>
			if i < len(texts)-1 {
				<p class="font-normal mx-2">
					|
				</p>
			}
		}
	</div>
}

templ Header() {
	<header class="fixed top-0 left-0 pt-2 pb-1.5 w-full z-50 bg-white max-h-[128px] truncate overflow-visible">
		<div class="w-full flex flex-col">
			<div
				id="header-row1"
				class="w-full flex flex-row"
				hx-trigger="load once"
				hx-get="/cchoice/settings/header-texts"
				hx-select="#header-row1-texts"
				hx-target="#header-row1-texts"
				hx-swap="outerHTML"
			>
				@HeaderRow1Texts(nil)
			</div>
			<div id="header-row2" class="w-full flex flex-row items-center">
				@LogoWithText("256", "128")
				<div
					id="search-wrapper"
					class="w-full flex items-center place-content-center px-8 py-2"
					_="
						on click from document
							if event.target.closest('#search-wrapper') == null
								add .hidden to #search-results
							end
						end

						on keyup[key is 'Escape'] from document
							add .hidden to #search-results
						end
					"
				>
					@SearchBar()
				</div>
				<div class="px-8 py-2">
					@Cart()
				</div>
			</div>
		</div>
		@HR()
	</header>
}
