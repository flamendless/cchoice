// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.898
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ModalProductImageViewer(imageData string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"modal_image_viewer\" class=\"fixed hidden top-0 bottom-0 left-0 right-0 z-1000\n\t\t\tflex flex-col items-center\" _=\"on closeModal add .hidden\n\t\t\ton openModal wait 0.05s then remove .hidden\"><div class=\"absolute -z-1 top-0 bottom-0 left-0 right-0 bg-white/50\" _=\"on click trigger closeModal\"></div><div class=\"modal-content w-[32rem] h-screen flex flex-col items-center justify-center\"><div class=\"relative inline-block\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Image("").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<span class=\"absolute top-0 right-0 size-8\n\t\t\t\t\t\trounded-full flex items-center justify-center transform translate-x-1/2 -translate-y-1/2\n\t\t\t\t\t\ttext-white bg-cchoice hover:bg-cchoice_dark font-medium text-xs cursor-pointer transition-colors\" title=\"close image viewer\" _=\"on click trigger closeModal\">X</span></div><div class=\"flex flex-row h-auto justify-center w-full bg-white p-2\"><button class=\"\n\t\t\t\t\t\tflex justify-center items-center w-12 h-12\n\t\t\t\t\t\tbg-cchoice font-medium rounded-lg text-sm p-1 cursor-pointer m-2 transition-colors group\n\t\t\t\t\t\trounded-full hover:bg-cchoicesoft\n\t\t\t\t\t\" title=\"go to product page\" alt=\"go to product page button\" _=\"on click log 'TODO'\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgOpen("stroke-white group-hover:stroke-cchoice_border w-full h-full p-2").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</button> <button class=\"\n\t\t\t\t\t\tflex justify-center items-center relative inline-block w-12 h-12\n\t\t\t\t\t\tbg-cchoice font-medium rounded-lg text-sm p-1 cursor-pointer m-2 transition-colors group\n\t\t\t\t\t\trounded-full hover:bg-cchoicesoft\n\t\t\t\t\t\" title=\"add to cart\" alt=\"add to cart button\" _=\"on click log 'TODO'\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgCart("stroke-white group-hover:stroke-cchoice_border w-full h-full p-2").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<span class=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full px-1.5 shadow\">+1</span></button></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
