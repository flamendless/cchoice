// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query_user.sql

package cchoice_db

import (
	"context"
)

const getUserByEMailAndUserType = `-- name: GetUserByEMailAndUserType :one
SELECT id
FROM tbl_user
WHERE
	email = ? AND
	user_type = ?
LIMIT 1
`

type GetUserByEMailAndUserTypeParams struct {
	Email    string
	UserType string
}

func (q *Queries) GetUserByEMailAndUserType(ctx context.Context, arg GetUserByEMailAndUserTypeParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getUserByEMailAndUserType, arg.Email, arg.UserType)
	var id int64
	err := row.Scan(&id)
	return id, err
}
