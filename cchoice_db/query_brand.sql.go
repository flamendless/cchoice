// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query_brand.sql

package cchoice_db

import (
	"context"
)

const createBrand = `-- name: CreateBrand :one
INSERT INTO tbl_brand (
	name
) VALUES (
	?
) RETURNING id, name
`

func (q *Queries) CreateBrand(ctx context.Context, name string) (TblBrand, error) {
	row := q.db.QueryRowContext(ctx, createBrand, name)
	var i TblBrand
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getBrandIDByName = `-- name: GetBrandIDByName :one
SELECT id
FROM tbl_brand
WHERE
	name = ?
LIMIT 1
`

func (q *Queries) GetBrandIDByName(ctx context.Context, name string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getBrandIDByName, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}
